scalar DateTime

type UserResponse {
    id: ID!
    name: String!
    userName: String!
    email: String!
    address: Address
    role: String!
    audit: Audit
}
 type Address {
     cep: String!
     street: String!
     number: String!
     neighborhood: String!
     city: String!
     state: String!
     country: String!
 }

type Audit {
    createdBy: String
    createdAt: DateTime
    updatedBy: String
    updatedAt: DateTime
}

type ConsultationResponse {
    id: ID!
    patientReport: String!
    consultationDate: DateTime!
    medic: UserResponse!
    nurse: UserResponse!
    patient: UserResponse!
    audit: Audit
}

# Declaração do tipo de entrada
input ConsultationRequest {
    idPatient: ID!
    idMedic: ID!
    idNurse: ID!
    patientReport: String!
    consultationDate: DateTime!
}

input ConsultationUpdateRequest {
    report: String
    date: DateTime
}

# Queries disponíveis
type Query {
    hello: String
    consultationByPatient(patientId: ID!): ConsultationResponse
    myConsultations: [ConsultationResponse!]!
    futureConsultations(patientId: ID!): [ConsultationResponse!]!
    consultationById(id: ID!): ConsultationResponse
}

# Mutations para agendamento
type Mutation {
    createConsultation(dto: ConsultationRequest!): ConsultationResponse!
    updateConsultation(id: ID!, dto: ConsultationUpdateRequest!): ConsultationResponse!
    deleteConsultation(id: ID!): Boolean
}
